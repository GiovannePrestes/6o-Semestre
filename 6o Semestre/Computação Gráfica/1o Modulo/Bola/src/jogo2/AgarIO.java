/*
 * FrmJogo.java
 *
 * Created on 7 de Agosto de 2008, 09:51
 */
package jogo2;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferStrategy;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Jackson
 */
public class AgarIO extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form FrmJogo
     */
    public AgarIO() {
        initComponents();

        createBufferStrategy(2);

        Thread t = new Thread(this);
        t.start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new AgarIO().setVisible(true);
            }
        });
    }

    public void run() {

        BufferStrategy buffer = getBufferStrategy();
        Graphics bg;

        ArrayList<Bola> minhasBolas = new ArrayList<Bola>();

        for (int i = 0; i < 10; i++) {
            int x = (int) (Math.random() * getWidth());
            int y = (int) (Math.random() * getHeight());

            minhasBolas.add(new Bola(Color.RED , x, y));
        }
        for (int i = 0; i < 10; i++) {
            int x = (int) (Math.random() * getWidth());
            int y = (int) (Math.random() * getHeight());

            minhasBolas.add(new Bola(Color.GREEN , x, y));
        }
        for (int i = 0; i < 10; i++) {
            int x = (int) (Math.random() * getWidth());
            int y = (int) (Math.random() * getHeight());

            minhasBolas.add(new Bola(Color.BLUE , x, y));
        }

        long tempo;

        tempo = System.currentTimeMillis();

        while (true) {
            boolean reset=true;
            int aux = 0;
            for(Bola b: minhasBolas){
                if(b.getCor() == Color.RED && (aux == 0 || aux == 1)){
                    aux=1;
                }else if(b.getCor() == Color.BLUE && (aux == 0 || aux == 2)){
                    aux=2;
                }else if(b.getCor() == Color.GREEN && (aux == 0 || aux == 3)){
                    aux=3;
                }else{
                    reset=false;
                }
            }
            if(reset){
                if(aux == 1)
                    JOptionPane.showMessageDialog(this,"RED WINS!");
                if(aux == 2)
                    JOptionPane.showMessageDialog(this,"BLUE WINS!");
                if(aux == 3)
                    JOptionPane.showMessageDialog(this,"GREEN WINS!");
                run();
            }

            bg = buffer.getDrawGraphics();

            bg.setColor(Color.YELLOW);
            bg.fillRect(0, 0, getWidth(), getHeight());

            for (Bola b : minhasBolas)
                b.mover();

            for (Bola b : minhasBolas)
                b.desenhar(bg);
            
            for (Bola b : minhasBolas)
                b.trataColisaoForm(getWidth(), getHeight());
            boolean teste = false;
            int aux2 = 0;
            for(Bola b : minhasBolas){
                for(int i=0; i<minhasBolas.size(); i++){
                    if(b!=minhasBolas.get(i))
                        if(b.getRect().intersects(minhasBolas.get(i).getRect()))
                            if(b.trataColisaoBola(minhasBolas.get(i))){
                                teste = true;
                                aux2=i;
                                break;
                            }
                }
                if(teste)
                    break;
            }
            if(teste){
                minhasBolas.remove(aux2);
            }
            bg.dispose();
            buffer.show();

            try {
                Thread.sleep(10);
            } catch (InterruptedException ex) {

            }

        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
