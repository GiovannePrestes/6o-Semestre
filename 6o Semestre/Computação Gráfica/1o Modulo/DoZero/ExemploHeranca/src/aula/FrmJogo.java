package aula;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
/*
 * FrmJogo.java
 *
 * Created on 7 de Março de 2007, 19:52
 */

/**
 *
 * @author  Glauco
 */
public class FrmJogo extends javax.swing.JFrame implements Runnable {
    
    
    
    /** Controle do teclado */
    private boolean esquerdaPressed    = false;
    private boolean direitaPressed     = false;
    private boolean tiro               = false;
    
    
    private ArrayList <Elemento> elementos = new ArrayList <Elemento>();
    private Bola bola;
    private Raquete raquete;
    
    
    /** Creates new form FrmJogo */
    public FrmJogo() {
        
        initComponents();
        this.setSize(800,600);
        createBufferStrategy(2);
        
        bola = new Bola(Color.BLACK);
        bola.setX(20);
        bola.setY(20);
        
        raquete = new Raquete();
        raquete.setColor(Color.MAGENTA);
        raquete.setLargura(120);
        raquete.setAltura(40);
        raquete.setX(200);
        raquete.setY(getHeight()-raquete.getAltura());
        raquete.setIncX(0);
        raquete.setIncY(0);
        
        elementos.add(bola);
        elementos.add(raquete);
        
        
        
        
        Thread t = new Thread(this);
        t.start();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            tiro             = false;
        } 
        
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            esquerdaPressed = false;
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            direitaPressed = false;
        }
        
        
        
    }//GEN-LAST:event_formKeyReleased
        
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        
        
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            esquerdaPressed = true;
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            direitaPressed = true;
        }
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            tiro             = true;
        } 
    }//GEN-LAST:event_formKeyPressed
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmJogo().setVisible(true);
            }
        });
    }
    
    
    public void run() {
        
        long ultimoTiro  = System.currentTimeMillis();
        long tiroCorrente = 0;
   
        while(true) {
            
            Graphics g = getBufferStrategy().getDrawGraphics();
            
            //Limpa a Tela
            g.setColor(Color.GREEN);
            g.fillRect(0,0,this.getWidth(),this.getHeight());

            if(tiro)
            {
               tiroCorrente = System.currentTimeMillis(); 
               if(tiroCorrente > ultimoTiro+300) 
               {
                    ultimoTiro  = System.currentTimeMillis();
                    Tiro t = new Tiro(10,5);
                    t.setX(raquete.getX()+raquete.getLargura()/2);
                    t.setY(raquete.getY()-t.getAltura() - 1);
                    t.setIncY(-1);
                    t.setIncX(0);
                    elementos.add(t);
               }
            }
            
            for(Elemento e: elementos)
                e.desenhar(g);
            
            for(Elemento e: elementos)
                e.mover();
            
            if(esquerdaPressed)
                raquete.setIncX(-2);
            else if(direitaPressed)
                raquete.setIncX(2);
            else
                raquete.setIncX(0);
              
            if(raquete.colisao(bola))
                 bola.setIncY(-1);
            
            if(bola.getY() > getHeight())
            {
                  JOptionPane.showMessageDialog(this,
                          "GAME OVER!"
                          );
                   bola.setY(40);
                   bola.setX(40);
                   raquete.setIncX(0);
                   raquete.setX(150);
                  
            }
            
                //Verifica Colisao Bola com Campo
            if(bola.getX() > this.getWidth()-bola.getLargura()) {
                    bola.setIncX(-1);
            }
            
            if(bola.getX() < 0) {
                    bola.setIncX(1);
            }
                
            if(bola.getY() < 0) {
                    bola.setIncY(1);
            }

            g.dispose();
            getBufferStrategy().show();
            try {
                Thread.sleep(10);
            } catch (InterruptedException ex) {
                ex.printStackTrace();
            }
            
            
        }
        
        
        
        
        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
    
    
}






















